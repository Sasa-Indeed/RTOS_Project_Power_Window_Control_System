/*
 * window_switch.c
 *
 *  Created on: 3 May 2024
 *      Author: Ahmed
 */

#include "window_switch.h"

void HAL_windowInit(void){
    pin_config_t config;

    MCAL_GPIO_Init(DRIVER_WINDOW_PORT_NUMBER);
    MCAL_GPIO_Init(PASSENGER_WINDOW_PORT_NUMBER);

    /* For driver window up switch */
    config.pinNumber   = DRIVER_WINDOW_UP_SWITCH_PIN;
    config.direction   = MCAL_GPIO_DIRECTION_INPUT;
    config.outputMode  = MCAL_GPIO_OUTPUT_MODE_PULL_UP;
    config.outputSpeed = MCAL_GPIO_OUTPUT_SPEED_NONE;
    config.alterFunc   = MCAL_GPIO_ALTERFUNC_NONE;
    MCAL_GPIO_Pin_Init(DRIVER_WINDOW_PORT, &config);

    /* For driver window down switch */
    config.pinNumber = DRIVER_WINDOW_DOWN_SWITCH_PIN;
    MCAL_GPIO_Pin_Init(DRIVER_WINDOW_PORT, &config);

    /* For passenger window up switch */
    config.pinNumber   = PASSENGER_WINDOW_UP_SWITCH_PIN;
    config.direction   = MCAL_GPIO_DIRECTION_INPUT;
    config.outputMode  = MCAL_GPIO_OUTPUT_MODE_PULL_UP;
    config.outputSpeed = MCAL_GPIO_OUTPUT_SPEED_NONE;
    config.alterFunc   = MCAL_GPIO_ALTERFUNC_NONE;
    MCAL_GPIO_Pin_Init(PASSENGER_WINDOW_PORT, &config);

    /* For passenger window down switch */
    config.pinNumber = PASSENGER_WINDOW_DOWN_SWITCH_PIN;
    MCAL_GPIO_Pin_Init(PASSENGER_WINDOW_PORT, &config);


}

uint8 GPIO_DriverUpGetState(void){
    uint8 state = 0;
    MCAL_GPIO_ReadPin(DRIVER_WINDOW_PORT, DRIVER_WINDOW_UP_SWITCH_PIN, &state);
    return state;
}

uint8 GPIO_DriverDownGetState(void){
    uint8 state = 0;
    MCAL_GPIO_ReadPin(DRIVER_WINDOW_PORT, DRIVER_WINDOW_DOWN_SWITCH_PIN, &state);
    return state;
}

uint8 GPIO_PassengerUpGetState(void){
    uint8 state = 0;
    MCAL_GPIO_ReadPin(PASSENGER_WINDOW_PORT, PASSENGER_WINDOW_UP_SWITCH_PIN, &state);
    return state;
}

uint8 GPIO_PassengerDownGetState(void){
    uint8 state = 0;
    MCAL_GPIO_ReadPin(PASSENGER_WINDOW_PORT, PASSENGER_WINDOW_DOWN_SWITCH_PIN, &state);
    return state;
}

void read_swt(uint8 * swt, uint8 button_number){
  *swt = 0;
  uint8 state = 0;
  uint8 (*fun_ptr)(void) = NULL;

  switch(button_number){
  case DRIVER_WINDOW_UP_SWITCH :
      fun_ptr = GPIO_DriverUpGetState;
      break;

  case DRIVER_WINDOW_DOWN_SWITCH :
      fun_ptr = GPIO_DriverDownGetState;
      break;

  case PASSENGER_WINDOW_UP_SWITCH :
      fun_ptr = GPIO_PassengerUpGetState;
      break;

  case PASSENGER_WINDOW_DOWN_SWITCH :
      fun_ptr = GPIO_PassengerDownGetState;
      break;

  default:
      fun_ptr = NULL;
  }

  if(fun_ptr != NULL){
      do{
        state = fun_ptr();
        *swt |= !state;
      }while(!state);
  }
}

